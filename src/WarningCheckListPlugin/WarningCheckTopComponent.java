/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WarningCheckListPlugin;

import java.util.List;
import javax.swing.text.JTextComponent;
import org.netbeans.api.editor.EditorRegistry;
import org.netbeans.api.editor.*;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.editor.AnnotationDesc;
import org.netbeans.modules.editor.NbEditorDocument;
import org.openide.*;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import java.util.*;
import javax.swing.DefaultListModel;
import org.openide.text.Line;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//WarningCheckListPlugin//WarningCheck//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "WarningCheckTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "WarningCheckListPlugin.WarningCheckTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_WarningCheckAction",
        preferredID = "WarningCheckTopComponent"
)
@Messages({
    "CTL_WarningCheckAction=WarningCheck",
    "CTL_WarningCheckTopComponent=WarningCheck Window",
    "HINT_WarningCheckTopComponent=This is a WarningCheck window"
})
public final class WarningCheckTopComponent extends TopComponent {

    public WarningCheckTopComponent() {
        initComponents();
        setName(Bundle.CTL_WarningCheckTopComponent());
        setToolTipText(Bundle.HINT_WarningCheckTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        checkButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        warningLineList = new javax.swing.JList<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        org.openide.awt.Mnemonics.setLocalizedText(checkButton, org.openide.util.NbBundle.getMessage(WarningCheckTopComponent.class, "WarningCheckTopComponent.checkButton.text")); // NOI18N
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkButton, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        warningLineList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        warningLineList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                warningLineListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(warningLineList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // line - idx
    Map<Integer, Integer> lineIndex;

    void getInfo(String txt) {
        lineIndex = new HashMap<>();
        lineIndex.put(1, 0);

        int line = 1;
        int prevIdx = 0;
        while (txt.indexOf("\n", prevIdx) >= 0) {
            line++;
            lineIndex.put(line, txt.indexOf("\n", prevIdx) + 1);
            prevIdx = txt.indexOf("\n", prevIdx) + 1;
        }
    }

    // button click
    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        JTextComponent editorComponent = EditorRegistry.lastFocusedComponent();
        NbEditorDocument document = (NbEditorDocument) editorComponent.getDocument();

        try {
            String sbs = document.getText(0, document.getLength());
            getInfo(sbs);

            int lines = sbs.split("\n").length;
            DefaultListModel lineList = new DefaultListModel();
            for (int i = 0; i <= lines; i++) {
                AnnotationDesc x = document.getAnnotations().getActiveAnnotation(i);
                if (x != null) {
                    lineList.addElement("Line " + (i + 1));
                }
            }
            warningLineList.setModel(lineList);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_checkButtonActionPerformed

    private void warningLineListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_warningLineListValueChanged
        try {
            int line = Integer.parseInt(warningLineList.getSelectedValue().split(" ")[1]);
            JTextComponent editorComponent = EditorRegistry.lastFocusedComponent();
            editorComponent.getCaret().setDot(lineIndex.get(line));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_warningLineListValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> warningLineList;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
